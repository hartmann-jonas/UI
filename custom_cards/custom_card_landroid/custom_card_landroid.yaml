---
### Custom Card Landroid ###
custom_card_landroid:
  template:
    - "ulm_language_variables"
    - "ulm_translation_engine"
  variables:
    ulm_custom_card_landroid_battery: none
    ulm_custom_card_landroid_next_start: none
    ulm_custom_card_landroid_party: none
    ulm_custom_card_landroid_rain: none
    ulm_custom_card_landroid_icon: "mdi:robot-mower"
    ulm_custom_card_landroid_name: "[[[ return entity.attributes.friendly_name ]]]"
  triggers_update: "all"
  show_icon: false
  show_name: false
  show_label: false
  show_state: false
  show_last_changed: false
  show_entity_picture: false
  styles:
    grid:
      - grid-template-areas: "'Info Info Info Buttons Buttons' 'Battery Battery Battery Battery PartyRain'"
      - grid-template-columns: 1fr 1fr 1fr 1fr 1fr
      - grid-template-rows: min-content min-content
      - row-gap: 12px
      - column-gap: 6px
    card:
      - border-radius: var(--border-radius)
      - box-shadow: var(--box-shadow)
      - padding: 12px
  custom_fields:
    ## icon_info card with adjusted colors
    Info:
      card:
        type: "custom:button-card"
        template: "icon_info"
        tap_action:
          action: more-info
        entity: "[[[ return entity.entity_id ]]]"
        icon: "[[[ return variables.ulm_custom_card_landroid_icon ]]]"
        name: "[[[ return variables.ulm_custom_card_landroid_name ]]]"
        label: "[[[ return variables.ulm_translation_state ]]]"
        styles:
          card:
            - box-shadow: none
            - padding: 0px
          icon:
            - color: >
                [[[
                  var state = entity.state;
                  if (state === "mowing") {
                    return "rgba(var(--color-green),1)";
                  } else if (state === "offlaine") {
                    return "rgba(var(--color-red),1)";
                  }
                  return "rgba(var(--color-theme),0.2)";
                ]]]
          img_cell:
            - background-color: >
                [[[
                  var state = entity.state;
                  if (state === "mowing"){
                    return "rgba(var(--color-green),0.2)";
                  } else if (state === "offlaine"){
                    return "rgba(var(--color-red),0.2)";
                  }
                  return "rgba(var(--color-theme),0.05)";
                ]]]
    ## Start and Dock button
    Buttons:
      card:
        type: horizontal-stack
        cards:
          - type: custom:button-card
            template: widget_icon
            icon: mdi:play
            tap_action:
              action: call-service
              service: lawn_mower.start_mowing
              service_data:
                entity_id: "[[[ return entity.entity_id]]]"
          - type: custom:button-card
            template: widget_icon
            icon: mdi:home
            tap_action:
              action: call-service
              service: lawn_mower.dock
              service_data:
                entity_id: "[[[ return entity.entity_id]]]"
    ## Second row
    Battery:
      card:
        type: custom:bar-card
        entities:
          - entity: "[[[ return variables.ulm_custom_card_landroid_battery ]]]"
        severity:
          # var(--color-red) = #F18B82
          - color: "#F18B82"
            from: 0
            to: 20
          # var(--color-yellow) = #FCD663
          - color: "#FCD663"
            from: 21
            to: 50
          # var(--color-green) = #80C994
          - color: "#80C994"
            from: 51
            to: 100
        direction: right
        style: |-
          ha-card {
            box-shadow: none;
          }
          bar-card-background {
            height: 18px !important;
            margin: 0px !important;
          }
          bar-card-backgroundbar {
            background-color: rgba(var(--color-theme),0.2);
          }
          bar-card-backgroundbar, bar-card-currentbar {
            height: 18px;
            left: 0px !important
          }
          .card-content {
            padding: 0px !important;
          }
          bar-card-indicator, bar-card-contentbar, bar-card-iconbar, bar-card-name, bar-card-min, bar-card-divider, bar-card-max, bar-card-value {
            display: none;
          }
    PartyRain:
      card:
        type: horizontal-stack
        cards:
          ## Rain element
          - type: "custom:button-card"
            template: "widget_icon"
            icon: "mdi:water"
            tap_action:
              action: none
            styles:
              icon:
                - color: >
                    [[[
                      var state = states[variables.ulm_custom_card_landroid_rain].state;
                      if (state == "on") {
                        return "rgba(var(--color-blue),1)";
                      }
                      return "rgba(var(--color-theme),0.2)";
                    ]]]
              card:
                - background-color: "transparent"
                - height: "30px"
          ## Party mode
          - type: "custom:button-card"
            template: "widget_icon"
            icon: "mdi:party-popper"
            entity: "[[[ return variables.ulm_custom_card_landroid_party ]]]"
            tap_action:
              action: toggle
            styles:
              icon:
                - color: >
                    [[[
                      var state = states[variables.ulm_custom_card_landroid_party].state;
                      if (state == "on") {
                        return "rgba(var(--color-yellow),1)";
                      }
                      return "rgba(var(--color-theme),1)";
                    ]]]
              card:
                - background-color: "transparent"
                - height: "30px"
